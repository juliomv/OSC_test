{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"AzureSqlDatabaseDestino": {
			"type": "string"
		},
		"atq": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Transfiere_ATQ_SQLAz')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transfiere datos",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetMaxPeticionID",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetMinPeticionID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "InformixSource",
								"query": {
									"value": "SELECT * FROM @{variables('origenTablaActual')} WHERE @{variables('campoControlCarga')}>@{activity('GetMinPeticionID').output.firstRow.MinIDCarga} AND @{variables('campoControlCarga')}<=  @{activity('GetMaxPeticionID').output.firstRow.MaxIDCarga}",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true
						},
						"inputs": [
							{
								"referenceName": "TablaIFXATQ",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DestinoAzure",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "GetMaxPeticionID",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetIDLinaje",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "InformixSource",
								"query": {
									"value": "SELECT MAX(pet_ide) as MaxIDCarga from @{variables('origenTablaActual')}",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "TablaIFXATQ",
								"type": "DatasetReference"
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "RegistraFinalizacion",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Transfiere datos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spRegistraFinCarga]",
							"storedProcedureParameters": {
								"lastID": {
									"value": {
										"value": "@activity('GetMaxPeticionID').output.firstRow.MaxIDCarga",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"loadID": {
									"value": {
										"value": "@activity('GetIDLinaje').output.firstRow.CurLinaje",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AzureSqlDatabaseDestino')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GetIDLinaje",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "InsertaLinaje",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT ISNULL(MAX(Linaje_SK), 0) AS CurLinaje FROM Linaje WHERE Nombre_Tabla = '@{variables('tablaActual')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DestinoAzure",
								"type": "DatasetReference"
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "InsertaLinaje",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spRegistrarLinaje]",
							"storedProcedureParameters": {
								"nombreTabla": {
									"value": {
										"value": "@variables('tablaActual')",
										"type": "Expression"
									},
									"type": "String"
								},
								"tipoCarga": {
									"value": {
										"value": "@variables('tipoCargaActual')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AzureSqlDatabaseDestino')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GetMinPeticionID",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetIDLinaje",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT Ultimo_ID_Carga AS MinIDCarga FROM Linaje WHERE Linaje_SK = @{activity('GetIDLinaje').output.firstRow.curLinaje}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DestinoAzure",
								"type": "DatasetReference"
							},
							"firstRowOnly": true
						}
					}
				],
				"variables": {
					"tablaActual": {
						"type": "String",
						"defaultValue": "ATQ_PETICION_PETICIONARIO"
					},
					"tipoCargaActual": {
						"type": "String",
						"defaultValue": "I"
					},
					"origenTablaActual": {
						"type": "String",
						"defaultValue": "informix.atq_peticion_peticionario"
					},
					"campoControlCarga": {
						"type": "String",
						"defaultValue": "PET_IDE"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TablaIFXATQ')]",
				"[concat(variables('factoryId'), '/datasets/DestinoAzure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TablaIFXATQ')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('atq')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "InformixTable",
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinoAzure')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureSqlDatabaseDestino')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "atq_peticion_peticionario"
				}
			},
			"dependsOn": []
		}
	]
}